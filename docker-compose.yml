version: "3.10"

services:

  registration:
    build:
      context: ./registration-service
      dockerfile: Dockerfile
    ports:
      - "8000:5000"
    volumes:
      - ./registration-service:/app
    networks:
      - local_network

  webhook:
    build:
      context: ./webhook-service
      dockerfile: Dockerfile
    networks:
      - local_network
    depends_on:
      - rabbitmq
      - postgres

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: changeit
      POSTGRES_DB: webhook
    ports:
      - "5432:5432"
    networks:
      - local_network

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: changeit
    ports:
      - "5050:80"
    networks:
      - local_network

  rabbitmq:
    image: rabbitmq:management
    command: rabbitmq-server
    tty: true
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - local_network

  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=pyamqp://guest:guest@rabbitmq:5672//', '--port=5556']
    ports:
      - "5556:5556"
    depends_on:
      - rabbitmq
    networks:
      - local_network

  prometheus:
    image: prom/prometheus:v2.2.1
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - registration
    networks:
      - local_network

  grafana:
    image: grafana/grafana:5.1.0
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/grafana/config.ini:/etc/grafana/grafana.ini
      - ./monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/default.yaml
      - ./monitoring/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - local_network

networks:
  local_network:
    driver: bridge